/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PrivateRootsImport } from './routes/_privateRoots'
import { Route as AuthRootsImport } from './routes/_authRoots'
import { Route as IndexImport } from './routes/index'
import { Route as PrivateRootsProfileIndexImport } from './routes/_privateRoots/profile/index'
import { Route as PrivateRootsDashboardIndexImport } from './routes/_privateRoots/dashboard/index'
import { Route as AuthRootsLoginIndexImport } from './routes/_authRoots/login/index'

// Create/Update Routes

const PrivateRootsRoute = PrivateRootsImport.update({
  id: '/_privateRoots',
  getParentRoute: () => rootRoute,
} as any)

const AuthRootsRoute = AuthRootsImport.update({
  id: '/_authRoots',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PrivateRootsProfileIndexRoute = PrivateRootsProfileIndexImport.update({
  path: '/profile/',
  getParentRoute: () => PrivateRootsRoute,
} as any)

const PrivateRootsDashboardIndexRoute = PrivateRootsDashboardIndexImport.update(
  {
    path: '/dashboard/',
    getParentRoute: () => PrivateRootsRoute,
  } as any,
)

const AuthRootsLoginIndexRoute = AuthRootsLoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => AuthRootsRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authRoots': {
      id: '/_authRoots'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRootsImport
      parentRoute: typeof rootRoute
    }
    '/_privateRoots': {
      id: '/_privateRoots'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRootsImport
      parentRoute: typeof rootRoute
    }
    '/_authRoots/login/': {
      id: '/_authRoots/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthRootsLoginIndexImport
      parentRoute: typeof AuthRootsImport
    }
    '/_privateRoots/dashboard/': {
      id: '/_privateRoots/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof PrivateRootsDashboardIndexImport
      parentRoute: typeof PrivateRootsImport
    }
    '/_privateRoots/profile/': {
      id: '/_privateRoots/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof PrivateRootsProfileIndexImport
      parentRoute: typeof PrivateRootsImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRootsRoute: AuthRootsRoute.addChildren({ AuthRootsLoginIndexRoute }),
  PrivateRootsRoute: PrivateRootsRoute.addChildren({
    PrivateRootsDashboardIndexRoute,
    PrivateRootsProfileIndexRoute,
  }),
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authRoots",
        "/_privateRoots"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authRoots": {
      "filePath": "_authRoots.tsx",
      "children": [
        "/_authRoots/login/"
      ]
    },
    "/_privateRoots": {
      "filePath": "_privateRoots.tsx",
      "children": [
        "/_privateRoots/dashboard/",
        "/_privateRoots/profile/"
      ]
    },
    "/_authRoots/login/": {
      "filePath": "_authRoots/login/index.tsx",
      "parent": "/_authRoots"
    },
    "/_privateRoots/dashboard/": {
      "filePath": "_privateRoots/dashboard/index.tsx",
      "parent": "/_privateRoots"
    },
    "/_privateRoots/profile/": {
      "filePath": "_privateRoots/profile/index.tsx",
      "parent": "/_privateRoots"
    }
  }
}
ROUTE_MANIFEST_END */
